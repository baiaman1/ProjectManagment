// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagement.DAL.Data;

#nullable disable

namespace ProjectManagement.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240823100031_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ProjectManagement.DAL.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("DocumentData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DocumentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContractorCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("DATE");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectLeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("DATE");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientCompanyId");

                    b.HasIndex("ContractorCompanyId");

                    b.HasIndex("ProjectLeaderId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectEmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployees");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Document", b =>
                {
                    b.HasOne("ProjectManagement.DAL.Models.Project", "Project")
                        .WithMany("Documents")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Project", b =>
                {
                    b.HasOne("ProjectManagement.DAL.Models.Company", "ClientCompany")
                        .WithMany("ProjectClientCompanies")
                        .HasForeignKey("ClientCompanyId");

                    b.HasOne("ProjectManagement.DAL.Models.Company", "ContractorCompany")
                        .WithMany("ProjectContractorCompanies")
                        .HasForeignKey("ContractorCompanyId");

                    b.HasOne("ProjectManagement.DAL.Models.Employee", "ProjectLeader")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectLeaderId");

                    b.Navigation("ClientCompany");

                    b.Navigation("ContractorCompany");

                    b.Navigation("ProjectLeader");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.ProjectEmployee", b =>
                {
                    b.HasOne("ProjectManagement.DAL.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("ProjectManagement.DAL.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Company", b =>
                {
                    b.Navigation("ProjectClientCompanies");

                    b.Navigation("ProjectContractorCompanies");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectManagement.DAL.Models.Project", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
